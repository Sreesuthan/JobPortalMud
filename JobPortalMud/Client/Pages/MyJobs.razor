@page "/myjobs/{UserName}"
@inject IAppliedJobService AppliedJobService
@inject HttpClient Http 
@inject IJSRuntime JS
@inject NavigationManager navigationManager
@inject MudBlazor.ISnackbar snackBar

<MudGrid Style="background-image: url('Images/apply.jpg');" Class="rounded-lg">
    <MudItem xs="7">
        <MudText Typo="Typo.h4" Align="Align.Start" GutterBottom="true"><b>My Jobs</b></MudText>
        <a href="/">Home</a> <span class="mx-2 slash">/</span>
        <span class="text-black"><b>My Jobs</b></span>
    </MudItem>
</MudGrid>
<br />
<MudGrid Class="mt-8" Justify="Justify.Center">
        <MudItem xs="12">
        @if (AppliedJobService.AppliedJobs.Count > 0)
            {
            @foreach (var job in AppliedJobService.AppliedJobs)
                {
                     <MudGrid>
                         <MudItem xs="2" Class="text-center" Style="background-color:lightgray">
                         @{
                            if (job.CompanyImage.Length > 0)
                            {
                                Image = job.CompanyImage;
                            }
                            else
                            {
                                Image = @"Images\company.png";
                            }
                         }
                             <MudImage Src="@Image" Width="100" Height="100" Alt="Image" Elevation="25" Class="rounded-lg ma-4" />
                         </MudItem>
                         <MudItem xs="6" Style="background-color:lightgray">
                             <MudText Typo="Typo.h5" Style="margin:15px"><b>@job.Title</b></MudText>
                             <MudText Typo="Typo.subtitle1"><MudIcon Icon="@Icons.Material.Filled.Monitor" Size="Size.Small" />&nbsp;@job.CompanyName&nbsp;&nbsp;&nbsp;<MudIcon Icon="@Icons.Material.Filled.LocationOn" Size="Size.Small" />&nbsp;@job.Address, @job.State, @job.Country&nbsp;&nbsp;&nbsp;<MudIcon Icon="@Icons.Material.Filled.Timer" Size="Size.Small" />&nbsp;@job.JobType</MudText>
                         </MudItem>
                         <MudItem xs="4" Class="text-center" Style="background-color:lightgray">
                            <br />
                            <MudButton Variant="Variant.Filled" Color="Color.Error" OnClick="() => DeleteUserJob(job.Id, UserName)" Class="mr-4 mt-4" Style="align:center"><MudIcon Icon="@Icons.Material.Outlined.Delete" />&nbsp;Remove</MudButton>
                         </MudItem>
                     </MudGrid>
                }
                <div class="d-flex flex-column align-center">
                <MudPagination Color="Color.Info" BoundaryCount="1" MiddleCount="2" Class="mt-5 align-end" SelectedChanged="PageChanged" Count="AppliedJobService.Paging.TotalPages" />
            </div>
            }
            else
            {
                <MudText Typo="Typo.h5" Align="Align.Start" GutterBottom="true">you haven't applied any jobs...</MudText>
            }
        </MudItem>
</MudGrid>


@code {
    [Parameter]
    public string? UserName { get; set; }

    public string? Image { get; set; }

    private int currentPage { get; set; }


    protected override async Task OnInitializedAsync()
    {
        await PageChanged(currentPage);
    }

    private async Task PageChanged(int i)
    {
        currentPage = i;
        await AppliedJobService.GetSingleUserAppliedJob(UserName, currentPage);
    }

    private async Task DeleteUserJob(int id, string user)
    {
        if (!await JS.InvokeAsync<bool>("confirm", "Are you sure you want to delete ?"))
        {
            return;
        }
        else
        {
            await AppliedJobService.DeleteUserAppliedJob(id, user);
            snackBar.Add("Application Deleted Successfully", Severity.Success);
        }
    }
}
