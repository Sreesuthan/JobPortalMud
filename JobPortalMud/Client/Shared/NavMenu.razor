@inject NavigationManager navigationManager
@inject HttpClient Http
@inject AuthenticationStateProvider Auth

<MudNavMenu Class="mt-16"> 
    <AuthorizeView>
        <Authorized>
            @if (role.UserName.Length > 0 && role.Name == "Admin")
            {
                <MudNavLink OnClick="() => Home()" Icon="@Icons.Material.Filled.Home" IconColor="Color.Inherit" Match="NavLinkMatch.All">Home</MudNavLink>
                <MudNavLink OnClick="() => UserList()" Icon="@Icons.Material.Filled.People" IconColor="Color.Inherit" Match="NavLinkMatch.All">Registered Users</MudNavLink>
                <MudNavLink OnClick="() => ContactList()" Icon="@Icons.Material.Filled.QuestionAnswer" IconColor="Color.Inherit" Match="NavLinkMatch.All">Complaints and Queries</MudNavLink>
                <MudNavLink OnClick="() => JobCategory(context.User.Identity.Name)" IconColor="Color.Inherit" Icon="@Icons.Material.Filled.Search" Match="NavLinkMatch.All">Find Job/Internship</MudNavLink>
                <MudNavLink OnClick="() => JobList(context.User.Identity.Name)" Icon="@Icons.Material.Filled.List" IconColor="Color.Inherit" Match="NavLinkMatch.All">Posted Jobs</MudNavLink>
                <MudNavLink OnClick="() => InternshipList(context.User.Identity.Name)" IconColor="Color.Inherit" Icon="@Icons.Material.Filled.ViewList" Match="NavLinkMatch.All">Posted Internships</MudNavLink>
                <MudNavLink OnClick="() => AppliedJobList(context.User.Identity.Name)" Icon="@Icons.Material.Filled.GetApp" IconColor="Color.Inherit" Match="NavLinkMatch.All">Job Applied Candidates</MudNavLink>
                <MudNavLink OnClick="() => PostJob(context.User.Identity.Name)" Icon="@Icons.Material.Filled.PostAdd" IconColor="Color.Inherit" Match="NavLinkMatch.All">Post a New Job/Internship</MudNavLink>
                <MudNavLink OnClick="() => Contact()" Icon="@Icons.Material.Filled.Call" IconColor="Color.Inherit" Match="NavLinkMatch.All">Contact Us</MudNavLink>
                <MudNavLink OnClick="() => About()" Icon="@Icons.Material.Filled.Info" IconColor="Color.Inherit" Match="NavLinkMatch.All">About Us</MudNavLink>
            }
            
            @if (role.UserName.Length > 0 && role.Name == "Employer")
            {
                <MudNavLink OnClick="() => Home()" Icon="@Icons.Material.Filled.Home" IconColor="Color.Inherit" Match="NavLinkMatch.All">Home</MudNavLink>
                <MudNavLink OnClick="() => JobList(context.User.Identity.Name)" IconColor="Color.Inherit" Icon="@Icons.Material.Filled.List" Match="NavLinkMatch.All">Posted Jobs</MudNavLink>
                <MudNavLink OnClick="() => InternshipList(context.User.Identity.Name)" IconColor="Color.Inherit" Icon="@Icons.Material.Filled.ViewList" Match="NavLinkMatch.All">Posted Internships</MudNavLink>
                <MudNavLink OnClick="() => AppliedJobList(context.User.Identity.Name)" IconColor="Color.Inherit" Icon="@Icons.Material.Filled.GetApp" Match="NavLinkMatch.All">Job Applied Candidates</MudNavLink>
                <MudNavLink OnClick="() => PostJob(context.User.Identity.Name)" IconColor="Color.Inherit" Icon="@Icons.Material.Filled.PostAdd" Match="NavLinkMatch.All">Post a New Job/Internship</MudNavLink>
                <MudNavLink OnClick="() => Contact()" Icon="@Icons.Material.Filled.Call" IconColor="Color.Inherit" Match="NavLinkMatch.All">Contact Us</MudNavLink>
                <MudNavLink OnClick="() => About()" Icon="@Icons.Material.Filled.Info" IconColor="Color.Inherit" Match="NavLinkMatch.All">About Us</MudNavLink>
            }
            @if (role.UserName.Length > 0 && (role.Name == "Job Seeker"))
            {
                <MudNavLink OnClick="() => Home()" Icon="@Icons.Material.Filled.Home" IconColor="Color.Inherit" Match="NavLinkMatch.All">Home</MudNavLink>
                <MudNavLink OnClick="() => JobCategory(context.User.Identity.Name)" Icon="@Icons.Material.Filled.Search" IconColor="Color.Inherit" Match="NavLinkMatch.All">Find Job/Internship</MudNavLink>
                <MudNavLink OnClick="() => Favorites(context.User.Identity.Name)" Icon="@Icons.Material.Filled.Favorite" IconColor="Color.Inherit" Match="NavLinkMatch.All">Favourites</MudNavLink>
                <MudNavLink OnClick="() => MyJobs(context.User.Identity.Name)" Icon="@Icons.Material.Filled.Work" IconColor="Color.Inherit" Match="NavLinkMatch.All">My Jobs/Internships</MudNavLink>
                <MudNavLink OnClick="() => Contact()" Icon="@Icons.Material.Filled.Call" IconColor="Color.Inherit" Match="NavLinkMatch.All">Contact Us</MudNavLink>
                <MudNavLink OnClick="() => About()" Icon="@Icons.Material.Filled.Info" IconColor="Color.Inherit" Match="NavLinkMatch.All">About</MudNavLink>
            }
        </Authorized>
        <NotAuthorized>
            <MudNavLink OnClick="() => Home()" Icon="@Icons.Material.Filled.Store" IconColor="Color.Inherit" Match="NavLinkMatch.All">Home</MudNavLink>
            <MudNavLink OnClick="() => Contact()" Icon="@Icons.Material.Filled.Call" IconColor="Color.Inherit" Match="NavLinkMatch.All">Contact Us</MudNavLink>
            <MudNavLink OnClick="() => About()" Icon="@Icons.Material.Filled.Info" IconColor="Color.Inherit" Match="NavLinkMatch.All">About</MudNavLink>
        </NotAuthorized>
    </AuthorizeView>
</MudNavMenu>


@code{
    Role role = new Role();

    protected override async Task OnInitializedAsync()
    {
        var userDetails = (await Auth.GetAuthenticationStateAsync()).User.Identity;
        if(userDetails != null && userDetails.IsAuthenticated)
        {
            var user = userDetails.Name;
            var result = await Http.GetFromJsonAsync<Role>($"api/User/role/{user}");
            if (result != null)
            {
                role = result;
            }
        }
    }

    void Home()
    {
        navigationManager.NavigateTo("/");
    }
    void Contact()
    {
        navigationManager.NavigateTo("contactus");
    }
    void About()
    {
        navigationManager.NavigateTo("about");
    }
    void ContactList()
    {
        navigationManager.NavigateTo("contactlist");
    }
    void UserList()
    {
        navigationManager.NavigateTo("userlist");
    }
    void JobCategory(string username)
    {
        navigationManager.NavigateTo($"category/{username}");
    }
    void JobList(string username)
    {
        navigationManager.NavigateTo($"joblist/{username}");
    }
    void InternshipList(string username)
    {
        navigationManager.NavigateTo($"internshiplist/{username}");
    }
    void AppliedJobList(string username)
    {
        navigationManager.NavigateTo($"appliedjoblist/{username}");
    }
    void PostJob(string username)
    {
        navigationManager.NavigateTo($"postjob/{username}");
    }
    void Favorites(string username)
    {
        navigationManager.NavigateTo($"favorites/{username}");
    }
    void MyJobs(string username)
    {
        navigationManager.NavigateTo($"myjobs/{username}");
    }
}


